#ifndef VEXCL_FFT_UNROLLED_DFT_HPP
#define VEXCL_FFT_UNROLLED_DFT_HPP

/*
The MIT License

Copyright (c) 2013 Pascal Germroth <pascal@ensieve.org>
Copyright (c) 2016 Pavel Bogdanov <bogdanov@niisi.msk.ru>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

#include <vector>
#include <string>
#include <sstream>

namespace vex {
namespace fft {

static std::vector<size_t> supported_primes() {
    static const size_t p[] = {2,3,5,7,11,13};
    return std::vector<size_t>(p, p + sizeof(p) / sizeof(p[0]));
}

static std::vector<size_t> supported_kernel_sizes() {
    static const size_t s[] = {2,3,4,5,6,7,8,9,11,13};
    return std::vector<size_t>(s, s + sizeof(s) / sizeof(s[0]));
}


static inline std::string in_place_dft(size_t n, bool invert) {
    std::ostringstream src;
    switch(n) {
        case 2:
            src <<
                "DEVICE void\n"
                "dft2 (real2_t * u0, real2_t * u1)\n"
                "{\n"
                "    real2_t p[2];\n"
                "    p[0] = *u0;\n"
                "    p[1] = *u1;\n"
                "    (*u0).x = p[0].x + p[1].x;\n"
                "    (*u0).y = p[0].y + p[1].y;\n"
                "    (*u1).x = p[0].x - p[1].x;\n"
                "    (*u1).y = p[0].y - p[1].y;\n"
                "}\n";
            break;
        case 3:
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft3 (real2_t * u0, real2_t * u1, real2_t * u2)\n"
                    "{\n"
                    "    const real_t b3_0 = 0.866025403784438646763723170752936183471402627;\n"
                    "    const real_t b3_1 = 0.500000000000000000000000000000000000000000000;\n"
                    "    real_t p0, p1, p2, p3, p4, p5;\n"
                    "    p0 = (*u1).x + (*u2).x;\n"
                    "    p1 = (*u1).x - (*u2).x;\n"
                    "    p2 = (*u1).y + (*u2).y;\n"
                    "    p3 = (*u2).y - (*u1).y;\n"
                    "    p4 = -b3_1 * p0 + (*u0).x;\n"
                    "    p5 = -b3_1 * p2 + (*u0).y;\n"
                    "    (*u0).x = (*u0).x + p0;\n"
                    "    (*u0).y = (*u0).y + p2;\n"
                    "    (*u1).x = b3_0 * p3 + p4;\n"
                    "    (*u1).y = b3_0 * p1 + p5;\n"
                    "    (*u2).x = -b3_0 * p3 + p4;\n"
                    "    (*u2).y = -b3_0 *  p1 + p5;\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft3 (real2_t * u0, real2_t * u1, real2_t * u2)\n"
                    "{\n"
                    "    const real_t b3_0 = 0.866025403784438646763723170752936183471402627;\n"
                    "    const real_t b3_1 = 0.500000000000000000000000000000000000000000000;\n"
                    "    real_t p0, p1, p2, p3, p4, p5;\n"
                    "    p0 = (*u1).x + (*u2).x;\n"
                    "    p1 = (*u2).x - (*u1).x;\n"
                    "    p2 = (*u1).y + (*u2).y;\n"
                    "    p3 = (*u1).y - (*u2).y;\n"
                    "    p4 = -b3_1 * p0 + (*u0).x;\n"
                    "    p5 = -b3_1 * p2 + (*u0).y;\n"
                    "    (*u0).x = (*u0).x + p0;\n"
                    "    (*u0).y = (*u0).y + p2;\n"
                    "    (*u1).x = b3_0 * p3 + p4;\n"
                    "    (*u1).y = b3_0 * p1 + p5;\n"
                    "    (*u2).x = -b3_0 * p3 + p4;\n"
                    "    (*u2).y = -b3_0 *  p1 + p5;\n"
                    "}\n";
            }
            break;
        case 4:
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft4 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3)\n"
                    "{\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7;\n"
                    "    p0 = (*u0).x - (*u2).x;\n"
                    "    p3 = (*u0).y - (*u2).y;\n"
                    "    p1 = (*u0).x + (*u2).x;\n"
                    "    p2 = (*u0).y + (*u2).y;\n"
                    "    p4 = (*u1).x + (*u3).x;\n"
                    "    p7 = (*u1).y + (*u3).y;\n"
                    "    p5 = (*u1).x - (*u3).x;\n"
                    "    p6 = (*u1).y - (*u3).y;\n"
                    "\n"
                    "    (*u0).x = p1 + p4;\n"
                    "    (*u0).y = p2 + p7;\n"
                    "    (*u1).x = p0 - p6;\n"
                    "    (*u1).y = p3 + p5;\n"
                    "    (*u2).x = p1 - p4;\n"
                    "    (*u2).y = p2 - p7;\n"
                    "    (*u3).x = p0 + p6;\n"
                    "    (*u3).y = p3 - p5;\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft4 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3)\n"
                    "{\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7;\n"
                    "    p0 = (*u0).x - (*u2).x;\n"
                    "    p3 = (*u0).y - (*u2).y;\n"
                    "    p1 = (*u0).x + (*u2).x;\n"
                    "    p2 = (*u0).y + (*u2).y;\n"
                    "    p4 = (*u1).x + (*u3).x;\n"
                    "    p7 = (*u1).y + (*u3).y;\n"
                    "    p5 = (*u1).x - (*u3).x;\n"
                    "    p6 = (*u1).y - (*u3).y;\n"
                    "\n"
                    "    (*u0).x = p1 + p4;\n"
                    "    (*u0).y = p2 + p7;\n"
                    "    (*u1).x = p0 + p6;\n"
                    "    (*u1).y = p3 - p5;\n"
                    "    (*u2).x = p1 - p4;\n"
                    "    (*u2).y = p2 - p7;\n"
                    "    (*u3).x = p0 - p6;\n"
                    "    (*u3).y = p3 + p5;\n"
                    "}\n";
            }
            break;
        case 5:
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft5 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4)\n"
                    "{\n"
                    "    const real_t b5_0 = 0.951056516295153572116439333379382143405698634;\n"
                    "    const real_t b5_1 = 0.618033988749894848204586834365638117720309180;\n"
                    "    const real_t b5_2 = 0.559016994374947424102293417182819058860154590;\n"
                    "    const real_t b5_3 = 0.250000000000000000000000000000000000000000000;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7;\n"
                    "    p0 = (*u1).x - (*u4).x;\n"
                    "    p1 = (*u1).x + (*u4).x;\n"
                    "    p2 = (*u2).x - (*u3).x;\n"
                    "    p3 = (*u2).x + (*u3).x;\n"
                    "    p4 = (*u1).y - (*u4).y;\n"
                    "    p5 = (*u1).y + (*u4).y;\n"
                    "    p6 = (*u2).y + (*u3).y;\n"
                    "    p7 = (*u2).y - (*u3).y;\n"
                    "\n"
                    "    real_t p8, p9, p10, p11;\n"
                    "    p8 = p1 + p3;\n"
                    "    p9 = p1 - p3;\n"
                    "    p10 = p5 + p6;\n"
                    "    p11 = p5 - p6;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n"
                    "    s0 =  b5_1 * p7 + p4;\n"
                    "    s1 = -b5_1 * p4 + p7;\n"
                    "    s2 = -b5_3 * p8 + (*u0).x;\n"
                    "    s3 =  b5_1 * p2 + p0;\n"
                    "    s4 = -b5_1 * p0 + p2;\n"
                    "    s5 = -b5_3 * p10 + (*u0).y;\n"
                    "    s6 =  b5_2 * p9 + s2;\n"
                    "    s7 = -b5_2 * p9 + s2;\n"
                    "    s8 =  b5_2 * p11 + s5;\n"
                    "    s9 = -b5_2 * p11 + s5;\n"
                    "\n"
                    "    (*u0).x = (*u0).x + p8;\n"
                    "    (*u0).y = (*u0).y + p10;\n"
                    "    (*u1).x = s6 - b5_0 * s0;\n"
                    "    (*u1).y = s8 + b5_0 * s3;\n"
                    "    (*u2).x = s7 + b5_0 * s1;\n"
                    "    (*u2).y = s9 - b5_0 * s4;\n"
                    "    (*u3).x = s7 - b5_0 * s1;\n"
                    "    (*u3).y = s9 + b5_0 * s4;\n"
                    "    (*u4).x = s6 + b5_0 * s0;\n"
                    "    (*u4).y = s8 - b5_0 * s3;\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft5 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4)\n"
                    "{\n"
                    "    const real_t b5_0 = 0.951056516295153572116439333379382143405698634;\n"
                    "    const real_t b5_1 = 0.618033988749894848204586834365638117720309180;\n"
                    "    const real_t b5_2 = 0.559016994374947424102293417182819058860154590;\n"
                    "    const real_t b5_3 = 0.250000000000000000000000000000000000000000000;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7;\n"
                    "    p0 = (*u1).x - (*u4).x;\n"
                    "    p1 = (*u1).x + (*u4).x;\n"
                    "    p2 = (*u2).x - (*u3).x;\n"
                    "    p3 = (*u2).x + (*u3).x;\n"
                    "    p4 = (*u1).y - (*u4).y;\n"
                    "    p5 = (*u1).y + (*u4).y;\n"
                    "    p6 = (*u2).y + (*u3).y;\n"
                    "    p7 = (*u2).y - (*u3).y;\n"
                    "\n"
                    "    real_t p8, p9, p10, p11;\n"
                    "    p8 = p1 + p3;\n"
                    "    p9 = p1 - p3;\n"
                    "    p10 = p5 + p6;\n"
                    "    p11 = p5 - p6;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n"
                    "    s0 =  b5_1 * p7 + p4;\n"
                    "    s1 = -b5_1 * p4 + p7;\n"
                    "    s2 = -b5_3 * p8 + (*u0).x;\n"
                    "    s3 =  b5_1 * p2 + p0;\n"
                    "    s4 = -b5_1 * p0 + p2;\n"
                    "    s5 = -b5_3 * p10 + (*u0).y;\n"
                    "    s6 =  b5_2 * p9 + s2;\n"
                    "    s7 = -b5_2 * p9 + s2;\n"
                    "    s8 =  b5_2 * p11 + s5;\n"
                    "    s9 = -b5_2 * p11 + s5;\n"
                    "\n"
                    "    (*u0).x = (*u0).x + p8;\n"
                    "    (*u0).y = (*u0).y + p10;\n"
                    "    (*u1).x = s6 + b5_0 * s0;\n"
                    "    (*u1).y = s8 - b5_0 * s3;\n"
                    "    (*u2).x = s7 - b5_0 * s1;\n"
                    "    (*u2).y = s9 + b5_0 * s4;\n"
                    "    (*u3).x = s7 + b5_0 * s1;\n"
                    "    (*u3).y = s9 - b5_0 * s4;\n"
                    "    (*u4).x = s6 - b5_0 * s0;\n"
                    "    (*u4).y = s8 + b5_0 * s3;\n"
                    "}\n";
            }
            break;
        case 6:
            // TODO: make planner use this
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft6 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "      real2_t * u5)\n"
                    "{\n"
                    "    const real_t b6_0 0.86602540378443864676372317075294;\n"
                    "    const real_t b6_1 0.50000000000000000000000000000000;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11;\n"
                    "    p0 = (*u0).x + (*u2).x + (*u4).x;\n"
                    "    p1 = (*u1).x + (*u3).x + (*u5).x;\n"
                    "    p2 = ((*u0).x - b6_1*((*u2).x + (*u4).x)) - b6_0*((*u2).y - (*u4).y);\n"
                    "    p3 = ((*u1).x - b6_1*((*u3).x + (*u5).x)) - b6_0*((*u3).y - (*u5).y);\n"
                    "    p4 = ((*u0).x - b6_1*((*u2).x + (*u4).x)) + b6_0*((*u2).y - (*u4).y);\n"
                    "    p5 = ((*u1).x - b6_1*((*u3).x + (*u5).x)) + b6_0*((*u3).y - (*u5).y);\n"
                    "\n"
                    "    p6  = (*u0).y + (*u2).y + (*u4).y;\n"
                    "    p7  = (*u1).y + (*u3).y + (*u5).y;\n"
                    "    p8  = ((*u0).y - b6_1*((*u2).y + (*u4).y)) + b6_0*((*u2).x - (*u4).x);\n"
                    "    p9  = ((*u1).y - b6_1*((*u3).y + (*u5).y)) + b6_0*((*u3).x - (*u5).x);\n"
                    "    p10 = ((*u0).y - b6_1*((*u2).y + (*u4).y)) - b6_0*((*u2).x - (*u4).x);\n"
                    "    p11 = ((*u1).y - b6_1*((*u3).y + (*u5).y)) - b6_0*((*u3).x - (*u5).x);\n"
                    "\n"
                    "    (*u0).x =  p0 + p1;\n"
                    "    (*u0).y =  p6 + p7;\n"
                    "    (*u1).x =  p2 + b6_1 * p3 - b6_0 * p9;\n"
                    "    (*u1).y =  p8 + b6_0 * p3 + b6_1 * p9;\n"
                    "    (*u2).x =  p4 - b6_1 * p5 - b6_0 * p11;\n"
                    "    (*u2).y = p10 + b6_0 * p5 - b6_1 * p11;\n"
                    "    (*u3).x =  p0 - p1;\n"
                    "    (*u3).y =  p6 - p7;\n"
                    "    (*u4).x =  p2 - b6_1 * p3 + b6_0 * p9;\n"
                    "    (*u4).y =  p8 - b6_0 * p3 - b6_1 * p9;\n"
                    "    (*u5).x =  p4 + b6_1 * p5 + b6_0 * p11;\n"
                    "    (*u5).y = p10 - b6_0 * p5 + b6_1 * p11;\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft6 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "      real2_t * u5)\n"
                    "{\n"
                    "    const real_t b6_0 0.86602540378443864676372317075294;\n"
                    "    const real_t b6_1 0.50000000000000000000000000000000;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11;\n"
                    "    p0 = (*u0).x + (*u2).x + (*u4).x;\n"
                    "    p1 = (*u1).x + (*u3).x + (*u5).x;\n"
                    "    p2 = ((*u0).x - b6_1*((*u2).x + (*u4).x)) + b6_0*((*u2).y - (*u4).y);\n"
                    "    p3 = ((*u1).x - b6_1*((*u3).x + (*u5).x)) + b6_0*((*u3).y - (*u5).y);\n"
                    "    p4 = ((*u0).x - b6_1*((*u2).x + (*u4).x)) - b6_0*((*u2).y - (*u4).y);\n"
                    "    p5 = ((*u1).x - b6_1*((*u3).x + (*u5).x)) - b6_0*((*u3).y - (*u5).y);\n"
                    "\n"
                    "    p6  = (*u0).y + (*u2).y + (*u4).y;\n"
                    "    p7  = (*u1).y + (*u3).y + (*u5).y;\n"
                    "    p8  = ((*u0).y - b6_1*((*u2).y + (*u4).y)) - b6_0*((*u2).x - (*u4).x);\n"
                    "    p9  = ((*u1).y - b6_1*((*u3).y + (*u5).y)) - b6_0*((*u3).x - (*u5).x);\n"
                    "    p10 = ((*u0).y - b6_1*((*u2).y + (*u4).y)) + b6_0*((*u2).x - (*u4).x);\n"
                    "    p11 = ((*u1).y - b6_1*((*u3).y + (*u5).y)) + b6_0*((*u3).x - (*u5).x);\n"
                    "\n"
                    "    (*u0).x =  p0 + p1;\n"
                    "    (*u0).y =  p6 + p7;\n"
                    "    (*u1).x =  p2 + b6_1 * p3 + b6_0 * p9;\n"
                    "    (*u1).y =  p8 - b6_0 * p3 + b6_1 * p9;\n"
                    "    (*u2).x =  p4 - b6_1 * p5 + b6_0 * p11;\n"
                    "    (*u2).y = p10 - b6_0 * p5 - b6_1 * p11;\n"
                    "    (*u3).x =  p0 - p1;\n"
                    "    (*u3).y =  p6 - p7;\n"
                    "    (*u4).x =  p2 - b6_1 * p3 - b6_0 * p9;\n"
                    "    (*u4).y =  p8 + b6_0 * p3 - b6_1 * p9;\n"
                    "    (*u5).x =  p4 + b6_1 * p5 - b6_0 * p11;\n"
                    "    (*u5).y = p10 + b6_0 * p5 + b6_1 * p11;\n"
                    "}\n";
            }
            break;
        case 7:
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft7 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "      real2_t * u5, real2_t * u6)\n"
                    "{\n"
                    "    const real_t bc71 = -1.16666666666666651863693004997913;\n"
                    "    const real_t bc72 = +0.79015646852540022404554065360571;\n"
                    "    const real_t bc73 = +0.05585426728964774240049351305970;\n"
                    "    const real_t bc74 = +0.73430220123575240531721419756650;\n"
                    "    const real_t bc75 = +0.44095855184409837868031445395900;\n"
                    "    const real_t bc76 = +0.34087293062393136944265847887436;\n"
                    "    const real_t bc77 = -0.53396936033772524066165487965918;\n"
                    "    const real_t bc78 = +0.87484229096165666561546458979137;\n"
                    "\n"
                    "    real2_t p[7];\n"
                    "    real2_t u7, u8;\n"
                    "    p[0] = *u1 + *u6;\n"
                    "    p[1] = *u1 - *u6;\n"
                    "    p[2] = *u2 + *u5;\n"
                    "    p[3] = *u2 - *u5;\n"
                    "    p[4] = *u4 + *u3;\n"
                    "    p[5] = *u4 - *u3;\n"
                    "    p[6] = p[2] + p[0];\n"
                    "    *u1 = p[6] + p[4];\n"
                    "    *u0 = *u0 + *u1;\n"
                    "    *u4 = p[2] - p[0];\n"
                    "    *u2 = p[0] - p[4];\n"
                    "    *u3 = p[4] - p[2];\n"
                    "    *u5 = p[5] + p[3];\n"
                    "    u7 = p[5] - p[3];\n"
                    "    *u6 = p[1] - p[5];\n"
                    "    u8 = p[3] - p[1];\n"
                    "    *u5 = *u5 + p[1];\n"
                    "\n"
                    "    *u1 = *u1 * bc71;\n"
                    "    *u2 = *u2 * bc72;\n"
                    "    *u3 = *u3 * bc73;\n"
                    "    *u4 = *u4 * bc74;\n"
                    "    *u5 = *u5 * -bc75;\n"
                    "    *u6 = *u6 * -bc76;\n"
                    "    u7 = u7 * -bc77;\n"
                    "    u8 = u8 * -bc78;\n"
                    "\n"
                    "    p[0] =   *u0 + *u1;\n"
                    "    p[1] =   *u2 + *u3;\n"
                    "    p[2] =   *u4 - *u3;\n"
                    "    p[3] = - *u2 - *u4;\n"
                    "    p[4] =   *u6 + u7;\n"
                    "    p[5] =   u8 - u7;\n"
                    "    p[6] = - u8 - *u6;\n"
                    "    p[1] =   p[0] + p[1];\n"
                    "    p[2] =   p[0] + p[2];\n"
                    "    p[3] =   p[0] + p[3];\n"
                    "    p[4] =   p[4] + *u5;\n"
                    "    p[5] =   p[5] + *u5;\n"
                    "    p[6] =   p[6] + *u5;\n"
                    "    *u1 = p[1] + (real2_t)( p[4].y,-p[4].x);\n"
                    "    *u2 = p[3] + (real2_t)( p[6].y,-p[6].x);\n"
                    "    *u3 = p[2] + (real2_t)(-p[5].y, p[5].x);\n"
                    "    *u4 = p[2] + (real2_t)( p[5].y,-p[5].x);\n"
                    "    *u5 = p[3] + (real2_t)(-p[6].y, p[6].x);\n"
                    "    *u6 = p[1] + (real2_t)(-p[4].y, p[4].x);\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft7 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "      real2_t * u5, real2_t * u6)\n"
                    "{\n"
                    "    const real_t bc71 = -1.16666666666666651863693004997913;\n"
                    "    const real_t bc72 = +0.79015646852540022404554065360571;\n"
                    "    const real_t bc73 = +0.05585426728964774240049351305970;\n"
                    "    const real_t bc74 = +0.73430220123575240531721419756650;\n"
                    "    const real_t bc75 = +0.44095855184409837868031445395900;\n"
                    "    const real_t bc76 = +0.34087293062393136944265847887436;\n"
                    "    const real_t bc77 = -0.53396936033772524066165487965918;\n"
                    "    const real_t bc78 = +0.87484229096165666561546458979137;\n"
                    "\n"
                    "    real2_t p[7];\n"
                    "    real2_t u7, u8;\n"
                    "    p[0] = *u1 + *u6;\n"
                    "    p[1] = *u1 - *u6;\n"
                    "    p[2] = *u2 + *u5;\n"
                    "    p[3] = *u2 - *u5;\n"
                    "    p[4] = *u4 + *u3;\n"
                    "    p[5] = *u4 - *u3;\n"
                    "    p[6] = p[2] + p[0];\n"
                    "    *u1 = p[6] + p[4];\n"
                    "    *u0 = *u0 + *u1;\n"
                    "    *u4 = p[2] - p[0];\n"
                    "    *u2 = p[0] - p[4];\n"
                    "    *u3 = p[4] - p[2];\n"
                    "    *u5 = p[5] + p[3];\n"
                    "    u7 = p[5] - p[3];\n"
                    "    *u6 = p[1] - p[5];\n"
                    "    u8 = p[3] - p[1];\n"
                    "    *u5 = *u5 + p[1];\n"
                    "\n"
                    "    *u1 = *u1 * bc71;\n"
                    "    *u2 = *u2 * bc72;\n"
                    "    *u3 = *u3 * bc73;\n"
                    "    *u4 = *u4 * bc74;\n"
                    "    *u5 = *u5 * bc75;\n"
                    "    *u6 = *u6 * bc76;\n"
                    "    u7 = u7 * bc77;\n"
                    "    u8 = u8 * bc78;\n"
                    "\n"
                    "    p[0] =   *u0 + *u1;\n"
                    "    p[1] =   *u2 + *u3;\n"
                    "    p[2] =   *u4 - *u3;\n"
                    "    p[3] = - *u2 - *u4;\n"
                    "    p[4] =   *u6 + u7;\n"
                    "    p[5] =   u8 - u7;\n"
                    "    p[6] = - u8 - *u6;\n"
                    "    p[1] =   p[0] + p[1];\n"
                    "    p[2] =   p[0] + p[2];\n"
                    "    p[3] =   p[0] + p[3];\n"
                    "    p[4] =   p[4] + *u5;\n"
                    "    p[5] =   p[5] + *u5;\n"
                    "    p[6] =   p[6] + *u5;\n"
                    "    *u1 = p[1] + (real2_t)( p[4].y,-p[4].x);\n"
                    "    *u2 = p[3] + (real2_t)( p[6].y,-p[6].x);\n"
                    "    *u3 = p[2] + (real2_t)(-p[5].y, p[5].x);\n"
                    "    *u4 = p[2] + (real2_t)( p[5].y,-p[5].x);\n"
                    "    *u5 = p[3] + (real2_t)(-p[6].y, p[6].x);\n"
                    "    *u6 = p[1] + (real2_t)(-p[4].y, p[4].x);\n"
                    "}\n";
            }
            break;
        case 8:
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft8 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "      real2_t * u5, real2_t * u6, real2_t * u7)\n"
                    "{\n"
                    "    const real_t bc8 = 0.707106781186547524400844362104849039284835938;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n"
                    "    real_t p10, p11, p12, p13, p14, p15;\n"
                    "    p0 = (*u0).x - (*u4).x;\n"
                    "    p1 = (*u0).x + (*u4).x;\n"
                    "    p2 = (*u0).y - (*u4).y;\n"
                    "    p3 = (*u0).y + (*u4).y;\n"
                    "    p4 = (*u1).x + (*u5).x;\n"
                    "    p5 = (*u1).x - (*u5).x;\n"
                    "    p6 = (*u1).y - (*u5).y;\n"
                    "    p7 = (*u1).y + (*u5).y;\n"
                    "    p8 = (*u2).x - (*u6).x;\n"
                    "    p9 = (*u2).x + (*u6).x;\n"
                    "    p10 = (*u2).y - (*u6).y;\n"
                    "    p11 = (*u2).y + (*u6).y;\n"
                    "    p12 = (*u7).x + (*u3).x;\n"
                    "    p13 = (*u7).x - (*u3).x;\n"
                    "    p14 = (*u7).y + (*u3).y;\n"
                    "    p15 = (*u7).y - (*u3).y;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n"
                    "    real_t s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n"
                    "    s0 = p1 - p9;\n"
                    "    s1 = p1 + p9;\n"
                    "    s2 = p6 + p5;\n"
                    "    s3 = p5 - p6;\n"
                    "    s4 = p4 + p12;\n"
                    "    s5 = (p4 - p12);\n"
                    "    s6 = p3 - p11;\n"
                    "    s7 = p3 + p11;\n"
                    "    s8 = p7 + p14;\n"
                    "    s9 = (-p7 + p14);\n"
                    "    s10 = p13 + p15;\n"
                    "    s11 = p15 - p13;\n"
                    "    s12 = p0 + p10;\n"
                    "    s13 = p0 - p10;\n"
                    "    s14 = s3 + s10;\n"
                    "    s15 = (s3 - s10);\n"
                    "    s16 = p2 - p8;\n"
                    "    s17 = p2 + p8;\n"
                    "    s18 = s11 + s2;\n"
                    "    s19 = (s11 - s2);\n"
                    "\n"
                    "    (*u0).x = s1 + s4;\n"
                    "    (*u0).y = s7 + s8;\n"
                    "    (*u1).x = bc8 * s14 + s13;\n"
                    "    (*u1).y = bc8 * s18 + s17;\n"
                    "    (*u2).x = s0 + s9;\n"
                    "    (*u2).y = s5 + s6;\n"
                    "    (*u3).x = bc8 * s19 + s12;\n"
                    "    (*u3).y = bc8 * s15 + s16;\n"
                    "    (*u4).x = s1 - s4;\n"
                    "    (*u4).y = s7 - s8;\n"
                    "    (*u5).x = -bc8 * s14 + s13;\n"
                    "    (*u5).y = -bc8 * s18 + s17;\n"
                    "    (*u6).x = s0 - s9;\n"
                    "    (*u6).y = s6 - s5;\n"
                    "    (*u7).x = -bc8 * s19 + s12;\n"
                    "    (*u7).y = -bc8 * s15 + s16;\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft8 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "      real2_t * u5, real2_t * u6, real2_t * u7)\n"
                    "{\n"
                    "    const real_t bc8 = 0.707106781186547524400844362104849039284835938;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n"
                    "    real_t p10, p11, p12, p13, p14, p15;\n"
                    "    p0 = (*u0).x - (*u4).x;\n"
                    "    p1 = (*u0).x + (*u4).x;\n"
                    "    p2 = (*u0).y - (*u4).y;\n"
                    "    p3 = (*u0).y + (*u4).y;\n"
                    "    p4 = (*u1).x + (*u5).x;\n"
                    "    p5 = (*u1).x - (*u5).x;\n"
                    "    p6 = (*u1).y - (*u5).y;\n"
                    "    p7 = (*u1).y + (*u5).y;\n"
                    "    p8 = (*u2).x - (*u6).x;\n"
                    "    p9 = (*u2).x + (*u6).x;\n"
                    "    p10 = (*u2).y - (*u6).y;\n"
                    "    p11 = (*u2).y + (*u6).y;\n"
                    "    p12 = (*u7).x + (*u3).x;\n"
                    "    p13 = (*u7).x - (*u3).x;\n"
                    "    p14 = (*u7).y + (*u3).y;\n"
                    "    p15 = (*u7).y - (*u3).y;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n"
                    "    real_t s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n"
                    "    s0 = p1 - p9;\n"
                    "    s1 = p1 + p9;\n"
                    "    s2 = p6 - p5;\n"
                    "    s3 = p5 + p6;\n"
                    "    s4 = p4 + p12;\n"
                    "    s5 = -(p4 - p12);\n"
                    "    s6 = p3 - p11;\n"
                    "    s7 = p3 + p11;\n"
                    "    s8 = p7 + p14;\n"
                    "    s9 = (p7 - p14);\n"
                    "    s10 = p13 - p15;\n"
                    "    s11 = p15 + p13;\n"
                    "    s12 = p0 - p10;\n"
                    "    s13 = p0 + p10;\n"
                    "    s14 = s3 + s10;\n"
                    "    s15 = -(s3 - s10);\n"
                    "    s16 = p2 + p8;\n"
                    "    s17 = p2 - p8;\n"
                    "    s18 = s11 + s2;\n"
                    "    s19 = -(s11 - s2);\n"
                    "\n"
                    "    (*u0).x = s1 + s4;\n"
                    "    (*u0).y = s7 + s8;\n"
                    "    (*u1).x = bc8 * s14 + s13;\n"
                    "    (*u1).y = bc8 * s18 + s17;\n"
                    "    (*u2).x = s0 + s9;\n"
                    "    (*u2).y = s5 + s6;\n"
                    "    (*u3).x = bc8 * s19 + s12;\n"
                    "    (*u3).y = bc8 * s15 + s16;\n"
                    "    (*u4).x = s1 - s4;\n"
                    "    (*u4).y = s7 - s8;\n"
                    "    (*u5).x = -bc8 * s14 + s13;\n"
                    "    (*u5).y = -bc8 * s18 + s17;\n"
                    "    (*u6).x = s0 - s9;\n"
                    "    (*u6).y = s6 - s5;\n"
                    "    (*u7).x = -bc8 * s19 + s12;\n"
                    "    (*u7).y = -bc8 * s15 + s16;\n"
                    "}\n";
            }
            break;
        case 9:
            if (invert) {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 9 -name dft9 -sign 1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 80 FP additions, 56 FP multiplications,\n"
                    << " * (or, 24 additions, 0 multiplications, 56 fused multiply/add),\n"
                    << " * 67 stack variables, 10 constants, and 36 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft9 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    {\n"
                    << "        const real_t KP777861913 =\n"
                    << "            +0.777861913430206160028177977318626690410586096;\n"
                    << "        const real_t KP839099631 =\n"
                    << "            +0.839099631177280011763127298123181364687434283;\n"
                    << "        const real_t KP852868531 =\n"
                    << "            +0.852868531952443209628250963940074071936020296;\n"
                    << "        const real_t KP984807753 =\n"
                    << "            +0.984807753012208059366743024589523013670643252;\n"
                    << "        const real_t KP492403876 =\n"
                    << "            +0.492403876506104029683371512294761506835321626;\n"
                    << "        const real_t KP954188894 =\n"
                    << "            +0.954188894138671133499268364187245676532219158;\n"
                    << "        const real_t KP363970234 =\n"
                    << "            +0.363970234266202361351047882776834043890471784;\n"
                    << "        const real_t KP176326980 =\n"
                    << "            +0.176326980708464973471090386868618986121633062;\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T13, T1b, T1c, T16, T19, T1d;\n"
                    << "            {\n"
                    << "                real_t TY, TC, TB, T5, Tl, TX, Tr, Tb, Ta, Tq, TJ, T17, TG,\n"
                    << "                    T18, Ts;\n"
                    << "                real_t Tc, Td, Tt;\n"
                    << "                {\n"
                    << "                    real_t Th, T1, Ti, Tj, T4, T2, T3;\n"
                    << "                    Th = v0.y;\n"
                    << "                    T1 = v0.x;\n"
                    << "                    T2 = v3.x;\n"
                    << "                    Ti = v3.y;\n"
                    << "                    Tj = v6.y;\n"
                    << "                    T3 = v6.x;\n"
                    << "                    T4 = T2 + T3;\n"
                    << "                    TY = T2 - T3;\n"
                    << "                    {\n"
                    << "                        real_t Tm, T6, Tn, T7, T8, To, Tk;\n"
                    << "                        Tm = v1.y;\n"
                    << "                        T6 = v1.x;\n"
                    << "                        TC = Tj - Ti;\n"
                    << "                        Tk = Ti + Tj;\n"
                    << "                        TB = fma (-KP500000000, T4, T1);\n"
                    << "                        T5 = T1 + T4;\n"
                    << "                        Tl = Th + Tk;\n"
                    << "                        TX = fma (-KP500000000, Tk, Th);\n"
                    << "                        Tn = v4.y;\n"
                    << "                        T7 = v4.x;\n"
                    << "                        T8 = v7.x;\n"
                    << "                        To = v7.y;\n"
                    << "                        {\n"
                    << "                            real_t TF, T9, TI, Tp, TH, TE;\n"
                    << "                            Tr = v2.y;\n"
                    << "                            Tb = v2.x;\n"
                    << "                            TF = T8 - T7;\n"
                    << "                            T9 = T7 + T8;\n"
                    << "                            TI = Tn - To;\n"
                    << "                            Tp = Tn + To;\n"
                    << "                            Ta = T6 + T9;\n"
                    << "                            TH = fma (-KP500000000, T9, T6);\n"
                    << "                            Tq = Tm + Tp;\n"
                    << "                            TE = fma (-KP500000000, Tp, Tm);\n"
                    << "                            TJ = fma (KP866025403, TI, TH);\n"
                    << "                            T17 = fma (-KP866025403, TI, TH);\n"
                    << "                            TG = fma (KP866025403, TF, TE);\n"
                    << "                            T18 = fma (-KP866025403, TF, TE);\n"
                    << "                            Ts = v5.y;\n"
                    << "                            Tc = v5.x;\n"
                    << "                            Td = v8.x;\n"
                    << "                            Tt = v8.y;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t TD, TZ, T15, T14, TU, TK, TR, TV;\n"
                    << "                    {\n"
                    << "                        real_t TP, Te, TM, Tu;\n"
                    << "                        T13 = fma (KP866025403, TC, TB);\n"
                    << "                        TD = fma (-KP866025403, TC, TB);\n"
                    << "                        TP = Tc - Td;\n"
                    << "                        Te = Tc + Td;\n"
                    << "                        TM = Tt - Ts;\n"
                    << "                        Tu = Ts + Tt;\n"
                    << "                        TZ = fma (-KP866025403, TY, TX);\n"
                    << "                        T1b = fma (KP866025403, TY, TX);\n"
                    << "                        {\n"
                    << "                            real_t Tf, TL, Tv, TO;\n"
                    << "                            Tf = Tb + Te;\n"
                    << "                            TL = fma (-KP500000000, Te, Tb);\n"
                    << "                            Tv = Tr + Tu;\n"
                    << "                            TO = fma (-KP500000000, Tu, Tr);\n"
                    << "                            {\n"
                    << "                                real_t TN, Tg, Ty, TQ;\n"
                    << "                                TN = fma (-KP866025403, TM, TL);\n"
                    << "                                T15 = fma (KP866025403, TM, TL);\n"
                    << "                                Tg = Ta + Tf;\n"
                    << "                                Ty = Ta - Tf;\n"
                    << "                                TQ = fma (-KP866025403, TP, TO);\n"
                    << "                                T14 = fma (KP866025403, TP, TO);\n"
                    << "                                {\n"
                    << "                                    real_t TA, Tw, Tz, Tx;\n"
                    << "                                    TA = Tv - Tq;\n"
                    << "                                    Tw = Tq + Tv;\n"
                    << "                                    Tz = fma (-KP500000000, Tg, T5);\n"
                    << "                                    v0.x = T5 + Tg;\n"
                    << "                                    v0.y = Tl + Tw;\n"
                    << "                                    Tx = fma (-KP500000000, Tw, Tl);\n"
                    << "                                    TU = fma (KP176326980, TG, TJ);\n"
                    << "                                    TK = fma (-KP176326980, TJ, TG);\n"
                    << "                                    v6.x = fma (-KP866025403, TA, Tz);\n"
                    << "                                    v6.y = fma (-KP866025403, Ty, Tx);\n"
                    << "                                    v3.y = fma (KP866025403, Ty, Tx);\n"
                    << "                                    v3.x = fma (KP866025403, TA, Tz);\n"
                    << "                                    TR = fma (KP363970234, TQ, TN);\n"
                    << "                                    TV = fma (-KP363970234, TN, TQ);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t T12, TS, T10, TW, TT, T11;\n"
                    << "                        T12 = fma (-KP954188894, TR, TK);\n"
                    << "                        TS = fma (KP954188894, TR, TK);\n"
                    << "                        T10 = fma (-KP954188894, TV, TU);\n"
                    << "                        TW = fma (KP954188894, TV, TU);\n"
                    << "                        TT = fma (KP492403876, TS, TD);\n"
                    << "                        T11 = fma (-KP492403876, T10, TZ);\n"
                    << "                        v2.y = fma (KP984807753, T10, TZ);\n"
                    << "                        v2.x = fma (-KP984807753, TS, TD);\n"
                    << "                        v8.x = fma (KP852868531, TW, TT);\n"
                    << "                        v8.y = fma (KP852868531, T12, T11);\n"
                    << "                        v5.y = fma (-KP852868531, T12, T11);\n"
                    << "                        v5.x = fma (-KP852868531, TW, TT);\n"
                    << "                        T1c = fma (KP176326980, T14, T15);\n"
                    << "                        T16 = fma (-KP176326980, T15, T14);\n"
                    << "                        T19 = fma (-KP839099631, T18, T17);\n"
                    << "                        T1d = fma (KP839099631, T17, T18);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            {\n"
                    << "                real_t T1a, T1g, T1e, T1i, T1h, T1f;\n"
                    << "                T1a = fma (-KP777861913, T19, T16);\n"
                    << "                T1g = fma (KP777861913, T19, T16);\n"
                    << "                T1e = fma (KP777861913, T1d, T1c);\n"
                    << "                T1i = fma (-KP777861913, T1d, T1c);\n"
                    << "                T1h = fma (KP492403876, T1a, T13);\n"
                    << "                T1f = fma (-KP492403876, T1e, T1b);\n"
                    << "                v1.y = fma (KP984807753, T1e, T1b);\n"
                    << "                v1.x = fma (-KP984807753, T1a, T13);\n"
                    << "                v7.x = fma (-KP852868531, T1i, T1h);\n"
                    << "                v7.y = fma (-KP852868531, T1g, T1f);\n"
                    << "                v4.y = fma (KP852868531, T1g, T1f);\n"
                    << "                v4.x = fma (KP852868531, T1i, T1h);\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "}\n";
            } else {
                src
                    << "/* Generated by: ./cl_gen_notw.native -n 9 -name dft9 -sign -1 -compact -fma -reorder-insns -reorder-loads -reorder-stores -schedule-for-pipeline -pipeline-latency 4 -standalone */\n"
                    << "/*\n"
                    << " * This function contains 80 FP additions, 56 FP multiplications,\n"
                    << " * (or, 24 additions, 0 multiplications, 56 fused multiply/add),\n"
                    << " * 67 stack variables, 10 constants, and 36 memory accesses\n"
                    << " */\n"
                    << "DEVICE void\n"
                    << "dft9 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    << "      real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8)\n"
                    << "{\n"
                    << "    real2_t v0 = *u0;\n"
                    << "    real2_t v1 = *u1;\n"
                    << "    real2_t v2 = *u2;\n"
                    << "    real2_t v3 = *u3;\n"
                    << "    real2_t v4 = *u4;\n"
                    << "    real2_t v5 = *u5;\n"
                    << "    real2_t v6 = *u6;\n"
                    << "    real2_t v7 = *u7;\n"
                    << "    real2_t v8 = *u8;\n"
                    << "    {\n"
                    << "        const real_t KP954188894 =\n"
                    << "            +0.954188894138671133499268364187245676532219158;\n"
                    << "        const real_t KP363970234 =\n"
                    << "            +0.363970234266202361351047882776834043890471784;\n"
                    << "        const real_t KP852868531 =\n"
                    << "            +0.852868531952443209628250963940074071936020296;\n"
                    << "        const real_t KP984807753 =\n"
                    << "            +0.984807753012208059366743024589523013670643252;\n"
                    << "        const real_t KP492403876 =\n"
                    << "            +0.492403876506104029683371512294761506835321626;\n"
                    << "        const real_t KP777861913 =\n"
                    << "            +0.777861913430206160028177977318626690410586096;\n"
                    << "        const real_t KP839099631 =\n"
                    << "            +0.839099631177280011763127298123181364687434283;\n"
                    << "        const real_t KP176326980 =\n"
                    << "            +0.176326980708464973471090386868618986121633062;\n"
                    << "        const real_t KP866025403 =\n"
                    << "            +0.866025403784438646763723170752936183471402627;\n"
                    << "        const real_t KP500000000 =\n"
                    << "            +0.500000000000000000000000000000000000000000000;\n"
                    << "        {\n"
                    << "            real_t T17, TV, T14, TY, T11, T15;\n"
                    << "            {\n"
                    << "                real_t Tm, TM, TL, T5, Tl, T1f, Tt, Tb, Ta, T1c, TI, TX, TF,\n"
                    << "                    TW, Tp;\n"
                    << "                real_t Tc, Td, Tq;\n"
                    << "                {\n"
                    << "                    real_t Th, T1, Ti, Tj, T4, T2, T3;\n"
                    << "                    Th = v0.y;\n"
                    << "                    T1 = v0.x;\n"
                    << "                    T2 = v3.x;\n"
                    << "                    Ti = v3.y;\n"
                    << "                    Tj = v6.y;\n"
                    << "                    T3 = v6.x;\n"
                    << "                    T4 = T2 + T3;\n"
                    << "                    Tm = T3 - T2;\n"
                    << "                    {\n"
                    << "                        real_t Tz, T6, TA, T7, T8, TB, Tk;\n"
                    << "                        Tz = v1.y;\n"
                    << "                        T6 = v1.x;\n"
                    << "                        TM = Ti - Tj;\n"
                    << "                        Tk = Ti + Tj;\n"
                    << "                        TL = fma (-KP500000000, T4, T1);\n"
                    << "                        T5 = T1 + T4;\n"
                    << "                        Tl = fma (-KP500000000, Tk, Th);\n"
                    << "                        T1f = Th + Tk;\n"
                    << "                        TA = v4.y;\n"
                    << "                        T7 = v4.x;\n"
                    << "                        T8 = v7.x;\n"
                    << "                        TB = v7.y;\n"
                    << "                        {\n"
                    << "                            real_t TE, T9, TH, TC, TG, TD;\n"
                    << "                            Tt = v2.y;\n"
                    << "                            Tb = v2.x;\n"
                    << "                            TE = T7 - T8;\n"
                    << "                            T9 = T7 + T8;\n"
                    << "                            TH = TB - TA;\n"
                    << "                            TC = TA + TB;\n"
                    << "                            Ta = T6 + T9;\n"
                    << "                            TG = fma (-KP500000000, T9, T6);\n"
                    << "                            T1c = Tz + TC;\n"
                    << "                            TD = fma (-KP500000000, TC, Tz);\n"
                    << "                            TI = fma (-KP866025403, TH, TG);\n"
                    << "                            TX = fma (KP866025403, TH, TG);\n"
                    << "                            TF = fma (-KP866025403, TE, TD);\n"
                    << "                            TW = fma (KP866025403, TE, TD);\n"
                    << "                            Tp = v5.y;\n"
                    << "                            Tc = v5.x;\n"
                    << "                            Td = v8.x;\n"
                    << "                            Tq = v8.y;\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                }\n"
                    << "                {\n"
                    << "                    real_t Tn, TN, TZ, T10, TO, Ty, TJ, TP;\n"
                    << "                    {\n"
                    << "                        real_t Tw, Te, Tu, Tr;\n"
                    << "                        T17 = fma (-KP866025403, Tm, Tl);\n"
                    << "                        Tn = fma (KP866025403, Tm, Tl);\n"
                    << "                        Tw = Td - Tc;\n"
                    << "                        Te = Tc + Td;\n"
                    << "                        Tu = Tp + Tq;\n"
                    << "                        Tr = Tp - Tq;\n"
                    << "                        TN = fma (KP866025403, TM, TL);\n"
                    << "                        TV = fma (-KP866025403, TM, TL);\n"
                    << "                        {\n"
                    << "                            real_t Tf, To, T1d, Tv;\n"
                    << "                            Tf = Tb + Te;\n"
                    << "                            To = fma (-KP500000000, Te, Tb);\n"
                    << "                            T1d = Tt + Tu;\n"
                    << "                            Tv = fma (-KP500000000, Tu, Tt);\n"
                    << "                            {\n"
                    << "                                real_t Ts, Tg, T1i, Tx;\n"
                    << "                                Ts = fma (KP866025403, Tr, To);\n"
                    << "                                TZ = fma (-KP866025403, Tr, To);\n"
                    << "                                Tg = Ta + Tf;\n"
                    << "                                T1i = Tf - Ta;\n"
                    << "                                Tx = fma (KP866025403, Tw, Tv);\n"
                    << "                                T10 = fma (-KP866025403, Tw, Tv);\n"
                    << "                                {\n"
                    << "                                    real_t T1e, T1g, T1b, T1h;\n"
                    << "                                    T1e = T1c - T1d;\n"
                    << "                                    T1g = T1c + T1d;\n"
                    << "                                    T1b = fma (-KP500000000, Tg, T5);\n"
                    << "                                    v0.x = T5 + Tg;\n"
                    << "                                    v0.y = T1f + T1g;\n"
                    << "                                    T1h = fma (-KP500000000, T1g, T1f);\n"
                    << "                                    TO = fma (KP176326980, Ts, Tx);\n"
                    << "                                    Ty = fma (-KP176326980, Tx, Ts);\n"
                    << "                                    v6.x = fma (-KP866025403, T1e, T1b);\n"
                    << "                                    v6.y = fma (-KP866025403, T1i, T1h);\n"
                    << "                                    v3.y = fma (KP866025403, T1i, T1h);\n"
                    << "                                    v3.x = fma (KP866025403, T1e, T1b);\n"
                    << "                                    TJ = fma (-KP839099631, TI, TF);\n"
                    << "                                    TP = fma (KP839099631, TF, TI);\n"
                    << "                                }\n"
                    << "                            }\n"
                    << "                        }\n"
                    << "                    }\n"
                    << "                    {\n"
                    << "                        real_t TS, TK, TU, TQ, TT, TR;\n"
                    << "                        TS = fma (KP777861913, TJ, Ty);\n"
                    << "                        TK = fma (-KP777861913, TJ, Ty);\n"
                    << "                        TU = fma (-KP777861913, TP, TO);\n"
                    << "                        TQ = fma (KP777861913, TP, TO);\n"
                    << "                        TT = fma (KP492403876, TK, Tn);\n"
                    << "                        TR = fma (-KP492403876, TQ, TN);\n"
                    << "                        v1.x = fma (KP984807753, TQ, TN);\n"
                    << "                        v1.y = fma (-KP984807753, TK, Tn);\n"
                    << "                        v7.y = fma (-KP852868531, TU, TT);\n"
                    << "                        v7.x = fma (-KP852868531, TS, TR);\n"
                    << "                        v4.x = fma (KP852868531, TS, TR);\n"
                    << "                        v4.y = fma (KP852868531, TU, TT);\n"
                    << "                        T14 = fma (-KP176326980, TW, TX);\n"
                    << "                        TY = fma (KP176326980, TX, TW);\n"
                    << "                        T11 = fma (-KP363970234, T10, TZ);\n"
                    << "                        T15 = fma (KP363970234, TZ, T10);\n"
                    << "                    }\n"
                    << "                }\n"
                    << "            }\n"
                    << "            {\n"
                    << "                real_t T12, T1a, T16, T18, T13, T19;\n"
                    << "                T12 = fma (-KP954188894, T11, TY);\n"
                    << "                T1a = fma (KP954188894, T11, TY);\n"
                    << "                T16 = fma (-KP954188894, T15, T14);\n"
                    << "                T18 = fma (KP954188894, T15, T14);\n"
                    << "                T13 = fma (-KP492403876, T12, TV);\n"
                    << "                T19 = fma (KP492403876, T18, T17);\n"
                    << "                v2.y = fma (-KP984807753, T18, T17);\n"
                    << "                v2.x = fma (KP984807753, T12, TV);\n"
                    << "                v8.x = fma (KP852868531, T16, T13);\n"
                    << "                v8.y = fma (KP852868531, T1a, T19);\n"
                    << "                v5.y = fma (-KP852868531, T1a, T19);\n"
                    << "                v5.x = fma (-KP852868531, T16, T13);\n"
                    << "            }\n"
                    << "        }\n"
                    << "    }\n"
                    << "    *u0 = v0;\n"
                    << "    *u1 = v1;\n"
                    << "    *u2 = v2;\n"
                    << "    *u3 = v3;\n"
                    << "    *u4 = v4;\n"
                    << "    *u5 = v5;\n"
                    << "    *u6 = v6;\n"
                    << "    *u7 = v7;\n"
                    << "    *u8 = v8;\n"
                    << "}\n";
            }
            break;
        case 11:
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft11 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    "       real2_t * u10)\n"
                    "{\n"
                    "    const real_t b11_0 = 0.989821441880932732376092037776718787376519372;\n"
                    "    const real_t b11_1 = 0.959492973614497389890368057066327699062454848;\n"
                    "    const real_t b11_2 = 0.918985947228994779780736114132655398124909697;\n"
                    "    const real_t b11_3 = 0.876768831002589333891339807079336796764054852;\n"
                    "    const real_t b11_4 = 0.830830026003772851058548298459246407048009821;\n"
                    "    const real_t b11_5 = 0.778434453334651800608337670740821884709317477;\n"
                    "    const real_t b11_6 = 0.715370323453429719112414662767260662417897278;\n"
                    "    const real_t b11_7 = 0.634356270682424498893150776899916060542806975;\n"
                    "    const real_t b11_8 = 0.342584725681637509502641509861112333758894680;\n"
                    "    const real_t b11_9 = 0.521108558113202722944698153526659300680427422;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n"
                    "    p0 =((*u1).x - (*u10).x);\n"
                    "    p1 = (*u1).x + (*u10).x;\n"
                    "    p2 =((*u5).x - (*u6).x);\n"
                    "    p3 = (*u5).x + (*u6).x;\n"
                    "    p4 =((*u2).x - (*u9).x);\n"
                    "    p5 = (*u2).x + (*u9).x;\n"
                    "    p6 =((*u3).x - (*u8).x);\n"
                    "    p7 = (*u3).x + (*u8).x;\n"
                    "    p8 = (*u4).x + (*u7).x;\n"
                    "    p9 =((*u4).x - (*u7).x);\n"
                    "\n"
                    "    real_t r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;\n"
                    "    r0 = p4 - p0 * b11_9;\n"
                    "    r1 = p0 + p2 * b11_9;\n"
                    "    r2 = p2 + p6 * b11_9;\n"
                    "    r3 = p6 + p9 * b11_9;\n"
                    "    r4 = p9 - p4 * b11_9;\n"
                    "    r5 = p7 - p1 * b11_8;\n"
                    "    r6 = p5 - p7 * b11_8;\n"
                    "    r7 = p1 - p8 * b11_8;\n"
                    "    r8 = p3 - p5 * b11_8;\n"
                    "    r9 = p8 - p3 * b11_8;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n"
                    "    s0 = p6 - r0 * b11_6;\n"
                    "    s1 = p9 + r1 * b11_6;\n"
                    "    s2 = p4 - r2 * b11_6;\n"
                    "    s3 = p0 + r3 * b11_6;\n"
                    "    s4 = p2 + r4 * b11_6;\n"
                    "    s5 = p3 - r5 * b11_7;\n"
                    "    s6 = p8 - r6 * b11_7;\n"
                    "    s7 = p5 - r7 * b11_7;\n"
                    "    s8 = p1 - r8 * b11_7;\n"
                    "    s9 = p7 - r9 * b11_7;\n"
                    "\n"
                    "    real_t p10, p11, p12, p13, p14, p15, p16, p17, p18, p19;\n"
                    "    p10 =((*u10).y - (*u1).y);\n"
                    "    p11 = (*u1).y + (*u10).y;\n"
                    "    p12 =((*u9).y - (*u2).y);\n"
                    "    p13 = (*u2).y + (*u9).y;\n"
                    "    p14 =((*u8).y - (*u3).y);\n"
                    "    p15 = (*u3).y + (*u8).y;\n"
                    "    p16 =((*u7).y - (*u4).y);\n"
                    "    p17 = (*u4).y + (*u7).y;\n"
                    "    p18 =((*u6).y - (*u5).y);\n"
                    "    p19 = (*u5).y + (*u6).y;\n"
                    "\n"
                    "    real_t r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;\n"
                    "    r10 = p12 - p10 * b11_9;\n"
                    "    r11 = p16 - p12 * b11_9;\n"
                    "    r12 = p18 + p14 * b11_9;\n"
                    "    r13 = p14 + p16 * b11_9;\n"
                    "    r14 = p10 + p18 * b11_9;\n"
                    "    r15 = p15 - p11 * b11_8;\n"
                    "    r16 = p19 - p13 * b11_8;\n"
                    "    r17 = p13 - p15 * b11_8;\n"
                    "    r18 = p11 - p17 * b11_8;\n"
                    "    r19 = p17 - p19 * b11_8;\n"
                    "\n"
                    "    real_t s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n"
                    "    s10 = p14 - r10 * b11_6;\n"
                    "    s11 = p18 + r11 * b11_6;\n"
                    "    s12 = p12 - r12 * b11_6;\n"
                    "    s13 = p10 + r13 * b11_6;\n"
                    "    s14 = p16 + r14 * b11_6;\n"
                    "    s15 = p19 - r15 * b11_7;\n"
                    "    s16 = p11 - r16 * b11_7;\n"
                    "    s17 = p17 - r17 * b11_7;\n"
                    "    s18 = p13 - r18 * b11_7;\n"
                    "    s19 = p15 - r19 * b11_7;\n"
                    "\n"
                    "    real_t v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n"
                    "    real_t v10, v11, v12, v13, v14, v15, v16, v17, v18, v19;\n"
                    "    v0 =  p9 -  s0 * b11_4;\n"
                    "    v1 =  p4 +  s1 * b11_4;\n"
                    "    v2 =  p0 +  s2 * b11_4;\n"
                    "    v3 =  p2 -  s3 * b11_4;\n"
                    "    v4 =  p6 -  s4 * b11_4;\n"
                    "    v5 =  p8 -  s5 * b11_5;\n"
                    "    v6 =  p1 -  s6 * b11_5;\n"
                    "    v7 =  p3 -  s7 * b11_5;\n"
                    "    v8 =  p7 -  s8 * b11_5;\n"
                    "    v9 =  p5 -  s9 * b11_5;\n"
                    "    v10 = p16 - s10 * b11_4;\n"
                    "    v11 = p14 - s11 * b11_4;\n"
                    "    v12 = p10 + s12 * b11_4;\n"
                    "    v13 = p18 - s13 * b11_4;\n"
                    "    v14 = p12 + s14 * b11_4;\n"
                    "    v15 = p17 - s15 * b11_5;\n"
                    "    v16 = p15 - s16 * b11_5;\n"
                    "    v17 = p11 - s17 * b11_5;\n"
                    "    v18 = p19 - s18 * b11_5;\n"
                    "    v19 = p13 - s19 * b11_5;\n"
                    "\n"
                    "    real_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9;\n"
                    "    real_t w10, w11, w12, w13, w14, w15, w16, w17, w18, w19;\n"
                    "    w0  =  p2 -  v0 * b11_2;\n"
                    "    w1  =  p6 +  v1 * b11_2;\n"
                    "    w2  =  p9 -  v2 * b11_2;\n"
                    "    w3  =  p4 +  v3 * b11_2;\n"
                    "    w4  =  p0 -  v4 * b11_2;\n"
                    "    w5  =  p5 -  v5 * b11_3;\n"
                    "    w6  =  p3 -  v6 * b11_3;\n"
                    "    w7  =  p7 -  v7 * b11_3;\n"
                    "    w8  =  p8 -  v8 * b11_3;\n"
                    "    w9  =  p1 -  v9 * b11_3;\n"
                    "    w10 = p18 - v10 * b11_2;\n"
                    "    w11 = p10 - v11 * b11_2;\n"
                    "    w12 = p16 - v12 * b11_2;\n"
                    "    w13 = p12 + v13 * b11_2;\n"
                    "    w14 = p14 + v14 * b11_2;\n"
                    "    w15 = p13 - v15 * b11_3;\n"
                    "    w16 = p17 - v16 * b11_3;\n"
                    "    w17 = p19 - v17 * b11_3;\n"
                    "    w18 = p15 - v18 * b11_3;\n"
                    "    w19 = p11 - v19 * b11_3;\n"
                    "\n"
                    "    real_t z0, z1, z2, z3, z4, z5, z6, z7, z8, z9;\n"
                    "    z0 = (*u0).x -  w5 * b11_1;\n"
                    "    z1 = (*u0).x -  w6 * b11_1;\n"
                    "    z2 = (*u0).x -  w7 * b11_1;\n"
                    "    z3 = (*u0).x -  w8 * b11_1;\n"
                    "    z4 = (*u0).x -  w9 * b11_1;\n"
                    "    z5 = (*u0).y - w15 * b11_1;\n"
                    "    z6 = (*u0).y - w16 * b11_1;\n"
                    "    z7 = (*u0).y - w17 * b11_1;\n"
                    "    z8 = (*u0).y - w18 * b11_1;\n"
                    "    z9 = (*u0).y - w19 * b11_1;\n"
                    "\n"
                    "    (*u0).x  = (*u0).x + p1 + p3 + p5 + p7 + p8;\n"
                    "    (*u0).y  = (*u0).y + p11 + p13 + p15 + p17 + p19;\n"
                    "    (*u1).x  = z1 + w14* b11_0;\n"
                    "    (*u1).y  = z7 +  w1* b11_0;\n"
                    "    (*u2).x  = z2 - w12* b11_0;\n"
                    "    (*u2).y  = z8 -  w2* b11_0;\n"
                    "    (*u3).x  = z0 + w11* b11_0;\n"
                    "    (*u3).y  = z5 +  w4* b11_0;\n"
                    "    (*u4).x  = z3 - w13* b11_0;\n"
                    "    (*u4).y  = z6 -  w3* b11_0;\n"
                    "    (*u5).x  = z4 + w10* b11_0;\n"
                    "    (*u5).y  = z9 +  w0* b11_0;\n"
                    "    (*u6).x  = z4 - w10* b11_0;\n"
                    "    (*u6).y  = z9 -  w0* b11_0;\n"
                    "    (*u7).x  = z3 + w13* b11_0;\n"
                    "    (*u7).y  = z6 +  w3* b11_0;\n"
                    "    (*u8).x  = z0 - w11* b11_0;\n"
                    "    (*u8).y  = z5 -  w4* b11_0;\n"
                    "    (*u9).x  = z2 + w12* b11_0;\n"
                    "    (*u9).y  = z8 +  w2* b11_0;\n"
                    "    (*u10).x = z1 - w14* b11_0;\n"
                    "    (*u10).y = z7 -  w1* b11_0;\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft11 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    "       real2_t * u10)\n"
                    "{\n"
                    "    const real_t b11_0 = 0.989821441880932732376092037776718787376519372;\n"
                    "    const real_t b11_1 = 0.959492973614497389890368057066327699062454848;\n"
                    "    const real_t b11_2 = 0.918985947228994779780736114132655398124909697;\n"
                    "    const real_t b11_3 = 0.876768831002589333891339807079336796764054852;\n"
                    "    const real_t b11_4 = 0.830830026003772851058548298459246407048009821;\n"
                    "    const real_t b11_5 = 0.778434453334651800608337670740821884709317477;\n"
                    "    const real_t b11_6 = 0.715370323453429719112414662767260662417897278;\n"
                    "    const real_t b11_7 = 0.634356270682424498893150776899916060542806975;\n"
                    "    const real_t b11_8 = 0.342584725681637509502641509861112333758894680;\n"
                    "    const real_t b11_9 = 0.521108558113202722944698153526659300680427422;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n"
                    "    p0 =-((*u1).x - (*u10).x);\n"
                    "    p1 = (*u1).x + (*u10).x;\n"
                    "    p2 =-((*u5).x - (*u6).x);\n"
                    "    p3 = (*u5).x + (*u6).x;\n"
                    "    p4 =-((*u2).x - (*u9).x);\n"
                    "    p5 = (*u2).x + (*u9).x;\n"
                    "    p6 =-((*u3).x - (*u8).x);\n"
                    "    p7 = (*u3).x + (*u8).x;\n"
                    "    p8 = (*u4).x + (*u7).x;\n"
                    "    p9 =-((*u4).x - (*u7).x);\n"
                    "\n"
                    "    real_t r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;\n"
                    "    r0 = p4 - p0 * b11_9;\n"
                    "    r1 = p0 + p2 * b11_9;\n"
                    "    r2 = p2 + p6 * b11_9;\n"
                    "    r3 = p6 + p9 * b11_9;\n"
                    "    r4 = p9 - p4 * b11_9;\n"
                    "    r5 = p7 - p1 * b11_8;\n"
                    "    r6 = p5 - p7 * b11_8;\n"
                    "    r7 = p1 - p8 * b11_8;\n"
                    "    r8 = p3 - p5 * b11_8;\n"
                    "    r9 = p8 - p3 * b11_8;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n"
                    "    s0 = p6 - r0 * b11_6;\n"
                    "    s1 = p9 + r1 * b11_6;\n"
                    "    s2 = p4 - r2 * b11_6;\n"
                    "    s3 = p0 + r3 * b11_6;\n"
                    "    s4 = p2 + r4 * b11_6;\n"
                    "    s5 = p3 - r5 * b11_7;\n"
                    "    s6 = p8 - r6 * b11_7;\n"
                    "    s7 = p5 - r7 * b11_7;\n"
                    "    s8 = p1 - r8 * b11_7;\n"
                    "    s9 = p7 - r9 * b11_7;\n"
                    "\n"
                    "    real_t p10, p11, p12, p13, p14, p15, p16, p17, p18, p19;\n"
                    "    p10 =-((*u10).y - (*u1).y);\n"
                    "    p11 = (*u1).y + (*u10).y;\n"
                    "    p12 =-((*u9).y - (*u2).y);\n"
                    "    p13 = (*u2).y + (*u9).y;\n"
                    "    p14 =-((*u8).y - (*u3).y);\n"
                    "    p15 = (*u3).y + (*u8).y;\n"
                    "    p16 =-((*u7).y - (*u4).y);\n"
                    "    p17 = (*u4).y + (*u7).y;\n"
                    "    p18 =-((*u6).y - (*u5).y);\n"
                    "    p19 = (*u5).y + (*u6).y;\n"
                    "\n"
                    "    real_t r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;\n"
                    "    r10 = p12 - p10 * b11_9;\n"
                    "    r11 = p16 - p12 * b11_9;\n"
                    "    r12 = p18 + p14 * b11_9;\n"
                    "    r13 = p14 + p16 * b11_9;\n"
                    "    r14 = p10 + p18 * b11_9;\n"
                    "    r15 = p15 - p11 * b11_8;\n"
                    "    r16 = p19 - p13 * b11_8;\n"
                    "    r17 = p13 - p15 * b11_8;\n"
                    "    r18 = p11 - p17 * b11_8;\n"
                    "    r19 = p17 - p19 * b11_8;\n"
                    "\n"
                    "    real_t s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n"
                    "    s10 = p14 - r10 * b11_6;\n"
                    "    s11 = p18 + r11 * b11_6;\n"
                    "    s12 = p12 - r12 * b11_6;\n"
                    "    s13 = p10 + r13 * b11_6;\n"
                    "    s14 = p16 + r14 * b11_6;\n"
                    "    s15 = p19 - r15 * b11_7;\n"
                    "    s16 = p11 - r16 * b11_7;\n"
                    "    s17 = p17 - r17 * b11_7;\n"
                    "    s18 = p13 - r18 * b11_7;\n"
                    "    s19 = p15 - r19 * b11_7;\n"
                    "\n"
                    "    real_t v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n"
                    "    real_t v10, v11, v12, v13, v14, v15, v16, v17, v18, v19;\n"
                    "    v0 =  p9 -  s0 * b11_4;\n"
                    "    v1 =  p4 +  s1 * b11_4;\n"
                    "    v2 =  p0 +  s2 * b11_4;\n"
                    "    v3 =  p2 -  s3 * b11_4;\n"
                    "    v4 =  p6 -  s4 * b11_4;\n"
                    "    v5 =  p8 -  s5 * b11_5;\n"
                    "    v6 =  p1 -  s6 * b11_5;\n"
                    "    v7 =  p3 -  s7 * b11_5;\n"
                    "    v8 =  p7 -  s8 * b11_5;\n"
                    "    v9 =  p5 -  s9 * b11_5;\n"
                    "    v10 = p16 - s10 * b11_4;\n"
                    "    v11 = p14 - s11 * b11_4;\n"
                    "    v12 = p10 + s12 * b11_4;\n"
                    "    v13 = p18 - s13 * b11_4;\n"
                    "    v14 = p12 + s14 * b11_4;\n"
                    "    v15 = p17 - s15 * b11_5;\n"
                    "    v16 = p15 - s16 * b11_5;\n"
                    "    v17 = p11 - s17 * b11_5;\n"
                    "    v18 = p19 - s18 * b11_5;\n"
                    "    v19 = p13 - s19 * b11_5;\n"
                    "\n"
                    "    real_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9;\n"
                    "    real_t w10, w11, w12, w13, w14, w15, w16, w17, w18, w19;\n"
                    "    w0  =  p2 -  v0 * b11_2;\n"
                    "    w1  =  p6 +  v1 * b11_2;\n"
                    "    w2  =  p9 -  v2 * b11_2;\n"
                    "    w3  =  p4 +  v3 * b11_2;\n"
                    "    w4  =  p0 -  v4 * b11_2;\n"
                    "    w5  =  p5 -  v5 * b11_3;\n"
                    "    w6  =  p3 -  v6 * b11_3;\n"
                    "    w7  =  p7 -  v7 * b11_3;\n"
                    "    w8  =  p8 -  v8 * b11_3;\n"
                    "    w9  =  p1 -  v9 * b11_3;\n"
                    "    w10 = p18 - v10 * b11_2;\n"
                    "    w11 = p10 - v11 * b11_2;\n"
                    "    w12 = p16 - v12 * b11_2;\n"
                    "    w13 = p12 + v13 * b11_2;\n"
                    "    w14 = p14 + v14 * b11_2;\n"
                    "    w15 = p13 - v15 * b11_3;\n"
                    "    w16 = p17 - v16 * b11_3;\n"
                    "    w17 = p19 - v17 * b11_3;\n"
                    "    w18 = p15 - v18 * b11_3;\n"
                    "    w19 = p11 - v19 * b11_3;\n"
                    "\n"
                    "    real_t z0, z1, z2, z3, z4, z5, z6, z7, z8, z9;\n"
                    "    z0 = (*u0).x -  w5 * b11_1;\n"
                    "    z1 = (*u0).x -  w6 * b11_1;\n"
                    "    z2 = (*u0).x -  w7 * b11_1;\n"
                    "    z3 = (*u0).x -  w8 * b11_1;\n"
                    "    z4 = (*u0).x -  w9 * b11_1;\n"
                    "    z5 = (*u0).y - w15 * b11_1;\n"
                    "    z6 = (*u0).y - w16 * b11_1;\n"
                    "    z7 = (*u0).y - w17 * b11_1;\n"
                    "    z8 = (*u0).y - w18 * b11_1;\n"
                    "    z9 = (*u0).y - w19 * b11_1;\n"
                    "\n"
                    "    (*u0).x  = (*u0).x + p1 + p3 + p5 + p7 + p8;\n"
                    "    (*u0).y  = (*u0).y + p11 + p13 + p15 + p17 + p19;\n"
                    "    (*u1).x  = z1 + w14* b11_0;\n"
                    "    (*u1).y  = z7 +  w1* b11_0;\n"
                    "    (*u2).x  = z2 - w12* b11_0;\n"
                    "    (*u2).y  = z8 -  w2* b11_0;\n"
                    "    (*u3).x  = z0 + w11* b11_0;\n"
                    "    (*u3).y  = z5 +  w4* b11_0;\n"
                    "    (*u4).x  = z3 - w13* b11_0;\n"
                    "    (*u4).y  = z6 -  w3* b11_0;\n"
                    "    (*u5).x  = z4 + w10* b11_0;\n"
                    "    (*u5).y  = z9 +  w0* b11_0;\n"
                    "    (*u6).x  = z4 - w10* b11_0;\n"
                    "    (*u6).y  = z9 -  w0* b11_0;\n"
                    "    (*u7).x  = z3 + w13* b11_0;\n"
                    "    (*u7).y  = z6 +  w3* b11_0;\n"
                    "    (*u8).x  = z0 - w11* b11_0;\n"
                    "    (*u8).y  = z5 -  w4* b11_0;\n"
                    "    (*u9).x  = z2 + w12* b11_0;\n"
                    "    (*u9).y  = z8 +  w2* b11_0;\n"
                    "    (*u10).x = z1 - w14* b11_0;\n"
                    "    (*u10).y = z7 -  w1* b11_0;\n"
                    "}\n";
            }
            break;
        case 13:
            if (invert) {
                src <<
                    "DEVICE void\n"
                    "dft13 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    "       real2_t * u10, real2_t * u11, real2_t * u12)\n"
                    "{\n"
                    "    const real_t b13_0  = 0.968287244361984016049539446938120421179794516;\n"
                    "    const real_t b13_1  = 0.957805992594665126462521754605754580515587217;\n"
                    "    const real_t b13_2  = 0.875502302409147941146295545768755143177842006;\n"
                    "    const real_t b13_3  = 0.866025403784438646763723170752936183471402627;\n"
                    "    const real_t b13_4  = 0.859542535098774820163672132761689612766401925;\n"
                    "    const real_t b13_5  = 0.853480001859823990758994934970528322872359049;\n"
                    "    const real_t b13_6  = 0.769338817572980603471413688209101117038278899;\n"
                    "    const real_t b13_7  = 0.686558370781754340655719594850823015421401653;\n"
                    "    const real_t b13_8  = 0.612264650376756543746494474777125408779395514;\n"
                    "    const real_t b13_9  = 0.600477271932665282925769253334763009352012849;\n"
                    "    const real_t b13_10 = 0.581704778510515730456870384989698884939833902;\n"
                    "    const real_t b13_11 = 0.575140729474003121368385547455453388461001608;\n"
                    "    const real_t b13_12 = 0.522026385161275033714027226654165028300441940;\n"
                    "    const real_t b13_13 = 0.520028571888864619117130500499232802493238139;\n"
                    "    const real_t b13_14 = 0.516520780623489722840901288569017135705033622;\n"
                    "    const real_t b13_15 = 0.514918778086315755491789696138117261566051239;\n"
                    "    const real_t b13_16 = 0.503537032863766627246873853868466977093348562;\n"
                    "    const real_t b13_17 = 0.500000000000000000000000000000000000000000000;\n"
                    "    const real_t b13_18 = 0.302775637731994646559610633735247973125648287;\n"
                    "    const real_t b13_19 = 0.301479260047709873958013540496673347309208464;\n"
                    "    const real_t b13_20 = 0.300462606288665774426601772289207995520941381;\n"
                    "    const real_t b13_21 = 0.251768516431883313623436926934233488546674281;\n"
                    "    const real_t b13_22 = 0.226109445035782405468510155372505010481906348;\n"
                    "    const real_t b13_23 = 0.083333333333333333333333333333333333333333333;\n"
                    "    const real_t b13_24 = 0.038632954644348171955506895830342264440241080;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n"
                    "    p0 = (*u7).x - (*u2).x;\n"
                    "    p1 = (*u7).x + (*u2).x;\n"
                    "    p2 = (*u8).x - (*u5).x;\n"
                    "    p3 = (*u8).x + (*u5).x;\n"
                    "    p4 = (*u9).x - (*u3).x;\n"
                    "    p5 = (*u3).x + (*u9).x;\n"
                    "    p6 = (*u10).x + (*u4).x;\n"
                    "    p7 = (*u10).x - (*u4).x;\n"
                    "    p8 = (*u11).x + (*u6).x;\n"
                    "    p9 = (*u11).x - (*u6).x;\n"
                    "\n"
                    "    real_t p10, p11, p12, p13, p14, p15, p16, p17, p18, p19;\n"
                    "    p10 = (*u12).x + p6;\n"
                    "    p11 = (*u1).x + p5;\n"
                    "    p12 = p8 - p1;\n"
                    "    p13 = p8 + p1;\n"
                    "    p14 = p9 + p0;\n"
                    "    p15 = p9 - p0;\n"
                    "    p16 = p7 - p4;\n"
                    "    p17 = p4 + p7;\n"
                    "    p18 = p11 + p10;\n"
                    "    p19 = p11 - p10;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n"
                    "    s0 = p3 + p13;\n"
                    "    s1 = p2 + p14;\n"
                    "    s2 = p16 - p15;\n"
                    "    s3 = p16 + p15;\n"
                    "    s4 = -(*u12).x + p6 * b13_17;\n"
                    "    s5 =   (*u1).x - p5 * b13_17;\n"
                    "    s6 = s5 - s4;\n"
                    "    s7 = s5 + s4;\n"
                    "    s8 = p18 + s0;\n"
                    "    s9 = p18 - s0;\n"
                    "    real_t c2 = p3 - p13 * b13_17;\n"
                    "    s10 = s6 - c2;\n"
                    "    s11 = s6 + c2;\n"
                    "\n"
                    "    real_t r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;\n"
                    "    r0 = (*u7).y + (*u2).y;\n"
                    "    r1 = (*u7).y - (*u2).y;\n"
                    "    r2 = (*u8).y + (*u5).y;\n"
                    "    r3 = (*u8).y - (*u5).y;\n"
                    "    r4 = (*u9).y - (*u3).y;\n"
                    "    r5 = (*u3).y + (*u9).y;\n"
                    "    r6 = (*u10).y + (*u4).y;\n"
                    "    r7 = (*u10).y - (*u4).y;\n"
                    "    r8 = (*u11).y - (*u6).y;\n"
                    "    r9 = (*u11).y + (*u6).y;\n"
                    "    r10 = (*u12).y + r6;\n"
                    "    r11 = (*u1).y + r5;\n"
                    "\n"
                    "    real_t m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10;\n"
                    "    real_t m11, m12, m13, m14, m15, m16, m17, m18, m19, m20;\n"
                    "    m0 = r4 + r7;\n"
                    "    m1 = r7 - r4;\n"
                    "    m2 = r8 - r1;\n"
                    "    m3 = r8 + r1;\n"
                    "    m4 = r9 + r0;\n"
                    "    m5 = r9 - r0;\n"
                    "    m6 = r11 + r10;\n"
                    "    m7 = r11 - r10;\n"
                    "    m8 = m1 - m2;\n"
                    "    m9 = m1 + m2;\n"
                    "    m10 = r3 + m3;\n"
                    "    m11 = r2 + m4;\n"
                    "    m12 = m6 - m11;\n"
                    "    m13 = m6 + m11;\n"
                    "\n"
                    "    m14 =  (*u1).y - r5 * b13_17;\n"
                    "    m15 = -(*u12).y + r6 * b13_17;\n"
                    "    m16 =  r2      - m4 * b13_17;\n"
                    "\n"
                    "    m17 = m14 + m15;\n"
                    "    m18 = m14 - m15;\n"
                    "    m19 = m18 + m16;\n"
                    "    m20 = m18 - m16;\n"
                    "\n"
                    "    real_t c0, c1, c3, c4, c5, c6, c7, c8, c9;\n"
                    "    real_t c10, c11, c12, c13, c14, c15, c16, c17, c18, c19;\n"
                    "    real_t c20, c21, c22, c23, c24;\n"
                    "    c0  =  s7 - p12 * b13_3;\n"
                    "    c1  =  s7 + p12 * b13_3;\n"
                    "    c3  =  p2 - p14 * b13_17;\n"
                    "    c4  =  s1 - p19 * b13_18;\n"
                    "    c5  = p19 + s1 * b13_18;\n"
                    "    c6  = s10 - s2 * b13_15;\n"
                    "    c7  = s11 - s3 * b13_22;\n"
                    "    c8  = (*u0).x - s8 * b13_23;\n"
                    "    c9  =  s2 + s10 * b13_7;\n"
                    "    c10 =  s3 + s11 * b13_19;\n"
                    "    c11 =  r3 - m3 * b13_17;\n"
                    "    c12 = m17 - m5 * b13_3;\n"
                    "    c13 = m17 + m5 * b13_3;\n"
                    "    c14 = m10 - m7 * b13_18;\n"
                    "    c15 = m20 - m8 * b13_15;\n"
                    "    c16 = m19 - m9 * b13_22;\n"
                    "    c17 =  m7 + m10 * b13_18;\n"
                    "    c18 = (*u0).y- m13 * b13_23;\n"
                    "    c19 =  m9 + m19 * b13_19;\n"
                    "    c20 =  m8 + m20 * b13_7;\n"
                    "    c21 =  c3 + p17 * b13_3;\n"
                    "    c22 =  c3 - p17 * b13_3;\n"
                    "    c23 = c11 + m0 * b13_3;\n"
                    "    c24 = c11 - m0 * b13_3;\n"
                    "\n"
                    "    real_t d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n"
                    "    real_t d10, d11, d12, d13, d14, d15, d16, d17, d18, d19;\n"
                    "    d0  = c22 +  c0 * b13_8;\n"
                    "    d1  =  c0 - c22 * b13_8;\n"
                    "    d2  = c21 +  c1 * b13_24;\n"
                    "    d3  =  c1 - c21 * b13_24;\n"
                    "    d4  =  s9 -  c6 * b13_4;\n"
                    "    d5  =  c6 +  s9 * b13_10;\n"
                    "    d6  =  c7 +  c9 * b13_6;\n"
                    "    d7  =  c7 -  c9 * b13_6;\n"
                    "    d8  =  c8 - c10 * b13_21;\n"
                    "    d9  =  c8 + c10 * b13_16;\n"
                    "    d10 = c24 + c12 * b13_8;\n"
                    "    d11 = c12 - c24 * b13_8;\n"
                    "    d12 = c23 + c13 * b13_24;\n"
                    "    d13 = c13 - c23 * b13_24;\n"
                    "    d14 = m12 - c15 * b13_4;\n"
                    "    d15 = c15 + m12 * b13_10;\n"
                    "    d16 = c18 + c19 * b13_16;\n"
                    "    d17 = c18 - c19 * b13_21;\n"
                    "    d18 = c16 - c20 * b13_6;\n"
                    "    d19 = c16 + c20 * b13_6;\n"
                    "\n"
                    "    real_t e0, e1, e2, e3, e4, e5, e6, e7, e8, e9;\n"
                    "    real_t e10, e11, e12, e13, e14, e15;\n"
                    "    e0  = d2  +  d0 * b13_5;\n"
                    "    e1  = d2  -  d0 * b13_5;\n"
                    "    e2  = d3  -  d1 * b13_5;\n"
                    "    e3  = d3  +  d1 * b13_5;\n"
                    "    e4  = d8  -  d4 * b13_20;\n"
                    "    e5  = d8  +  d4 * b13_20;\n"
                    "    e6  = d9  +  d5 * b13_14;\n"
                    "    e7  = d9  -  d5 * b13_14;\n"
                    "    e8  = d12 + d10 * b13_5;\n"
                    "    e9  = d12 - d10 * b13_5;\n"
                    "    e10 = d13 - d11 * b13_5;\n"
                    "    e11 = d13 + d11 * b13_5;\n"
                    "    e12 = d16 + d15 * b13_14;\n"
                    "    e13 = d16 - d15 * b13_14;\n"
                    "    e14 = d17 + d14 * b13_20;\n"
                    "    e15 = d17 - d14 * b13_20;\n"
                    "\n"
                    "    real_t f0, f1, f2, f3, f4, f5, f6, f7, f8, f9;\n"
                    "    real_t f10, f11, f12, f13, f14, f15, f16, f17, f18, f19;\n"
                    "    real_t f20, f21, f22, f23;\n"
                    "    f0  = c17 - e10 * b13_12;\n"
                    "    f1  = e10 + c17 * b13_1;\n"
                    "    f2  = e9  + c14 * b13_1;\n"
                    "    f3  = c14 -  e9 * b13_12;\n"
                    "    f4  = e11 + d7 * b13_0;\n"
                    "    f5  = e11 - d7 * b13_0;\n"
                    "    f6  = e5  + f3 * b13_11;\n"
                    "    f7  = e5  - f3 * b13_11;\n"
                    "    f8  = e4  + e8 * b13_13;\n"
                    "    f9  = e4  - e8 * b13_13;\n"
                    "    f10 = f0  - d6 * b13_2;\n"
                    "    f11 = f0  + d6 * b13_2;\n"
                    "    f12 = e1  +  c4 * b13_1;\n"
                    "    f13 = c4  -  e1 * b13_12;\n"
                    "    f14 = c5  -  e2 * b13_12;\n"
                    "    f15 = e2  +  c5 * b13_1;\n"
                    "    f16 = f14 + d19 * b13_2;\n"
                    "    f17 = f14 - d19 * b13_2;\n"
                    "    f18 = e15 -  e0 * b13_13;\n"
                    "    f19 = e15 +  e0 * b13_13;\n"
                    "    f20 = e14 - f13 * b13_11;\n"
                    "    f21 = e14 + f13 * b13_11;\n"
                    "    f22 = e3  - d18 * b13_0;\n"
                    "    f23 = e3  + d18 * b13_0;\n"
                    "\n"
                    "    (*u0).x  = (*u0).x + s8;\n"
                    "    (*u0).y  = (*u0).y + m13;\n"
                    "    (*u1).x  =  e6 +  f2 * b13_9 ;\n"
                    "    (*u1).y  = e12 - f12 * b13_9 ;\n"
                    "    (*u2).x  =  f9 - f10 * b13_11;\n"
                    "    (*u2).y  = f19 + f16 * b13_11;\n"
                    "    (*u3).x  =  f6 -  f5 * b13_13;\n"
                    "    (*u3).y  = f20 + f23 * b13_13;\n"
                    "    (*u4).x  =  f7 -  f4 * b13_13;\n"
                    "    (*u4).y  = f21 + f22 * b13_13;\n"
                    "    (*u5).x  =  e7 -  f1 * b13_9 ;\n"
                    "    (*u5).y  = e13 + f15 * b13_9 ;\n"
                    "    (*u6).x  =  f8 - f11 * b13_11;\n"
                    "    (*u6).y  = f18 + f17 * b13_11;\n"
                    "    (*u7).x  =  f9 + f10 * b13_11;\n"
                    "    (*u7).y  = f19 - f16 * b13_11;\n"
                    "    (*u8).x  =  e7 +  f1 * b13_9 ;\n"
                    "    (*u8).y  = e13 - f15 * b13_9 ;\n"
                    "    (*u9).x  =  f6 +  f5 * b13_13;\n"
                    "    (*u9).y  = f20 - f23 * b13_13;\n"
                    "    (*u10).x =  f7 +  f4 * b13_13;\n"
                    "    (*u10).y = f21 - f22 * b13_13;\n"
                    "    (*u11).x =  f8 + f11 * b13_11;\n"
                    "    (*u11).y = f18 - f17 * b13_11;\n"
                    "    (*u12).x =  e6 -  f2 * b13_9 ;\n"
                    "    (*u12).y = e12 + f12 * b13_9 ;\n"
                    "}\n";
            } else {
                src <<
                    "DEVICE void\n"
                    "dft13 (real2_t * u0, real2_t * u1, real2_t * u2, real2_t * u3, real2_t * u4,\n"
                    "       real2_t * u5, real2_t * u6, real2_t * u7, real2_t * u8, real2_t * u9,\n"
                    "       real2_t * u10, real2_t * u11, real2_t * u12)\n"
                    "{\n"
                    "    const real_t b13_0  = 0.968287244361984016049539446938120421179794516;\n"
                    "    const real_t b13_1  = 0.957805992594665126462521754605754580515587217;\n"
                    "    const real_t b13_2  = 0.875502302409147941146295545768755143177842006;\n"
                    "    const real_t b13_3  = 0.866025403784438646763723170752936183471402627;\n"
                    "    const real_t b13_4  = 0.859542535098774820163672132761689612766401925;\n"
                    "    const real_t b13_5  = 0.853480001859823990758994934970528322872359049;\n"
                    "    const real_t b13_6  = 0.769338817572980603471413688209101117038278899;\n"
                    "    const real_t b13_7  = 0.686558370781754340655719594850823015421401653;\n"
                    "    const real_t b13_8  = 0.612264650376756543746494474777125408779395514;\n"
                    "    const real_t b13_9  = 0.600477271932665282925769253334763009352012849;\n"
                    "    const real_t b13_10 = 0.581704778510515730456870384989698884939833902;\n"
                    "    const real_t b13_11 = 0.575140729474003121368385547455453388461001608;\n"
                    "    const real_t b13_12 = 0.522026385161275033714027226654165028300441940;\n"
                    "    const real_t b13_13 = 0.520028571888864619117130500499232802493238139;\n"
                    "    const real_t b13_14 = 0.516520780623489722840901288569017135705033622;\n"
                    "    const real_t b13_15 = 0.514918778086315755491789696138117261566051239;\n"
                    "    const real_t b13_16 = 0.503537032863766627246873853868466977093348562;\n"
                    "    const real_t b13_17 = 0.500000000000000000000000000000000000000000000;\n"
                    "    const real_t b13_18 = 0.302775637731994646559610633735247973125648287;\n"
                    "    const real_t b13_19 = 0.301479260047709873958013540496673347309208464;\n"
                    "    const real_t b13_20 = 0.300462606288665774426601772289207995520941381;\n"
                    "    const real_t b13_21 = 0.251768516431883313623436926934233488546674281;\n"
                    "    const real_t b13_22 = 0.226109445035782405468510155372505010481906348;\n"
                    "    const real_t b13_23 = 0.083333333333333333333333333333333333333333333;\n"
                    "    const real_t b13_24 = 0.038632954644348171955506895830342264440241080;\n"
                    "\n"
                    "    real_t p0, p1, p2, p3, p4, p5, p6, p7, p8, p9;\n"
                    "    p0 = (*u7).x - (*u2).x;\n"
                    "    p1 = (*u7).x + (*u2).x;\n"
                    "    p2 = (*u8).x - (*u5).x;\n"
                    "    p3 = (*u8).x + (*u5).x;\n"
                    "    p4 = (*u9).x - (*u3).x;\n"
                    "    p5 = (*u3).x + (*u9).x;\n"
                    "    p6 = (*u10).x + (*u4).x;\n"
                    "    p7 = (*u10).x - (*u4).x;\n"
                    "    p8 = (*u11).x + (*u6).x;\n"
                    "    p9 = (*u11).x - (*u6).x;\n"
                    "\n"
                    "    real_t p10, p11, p12, p13, p14, p15, p16, p17, p18, p19;\n"
                    "    p10 = (*u12).x + p6;\n"
                    "    p11 = (*u1).x + p5;\n"
                    "    p12 = p8 - p1;\n"
                    "    p13 = p8 + p1;\n"
                    "    p14 = p9 + p0;\n"
                    "    p15 = p9 - p0;\n"
                    "    p16 = p7 - p4;\n"
                    "    p17 = p4 + p7;\n"
                    "    p18 = p11 + p10;\n"
                    "    p19 = p11 - p10;\n"
                    "\n"
                    "    real_t s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n"
                    "    s0 = p3 + p13;\n"
                    "    s1 = p2 + p14;\n"
                    "    s2 = p16 - p15;\n"
                    "    s3 = p16 + p15;\n"
                    "    s4 = -(*u12).x + p6 * b13_17;\n"
                    "    s5 =   (*u1).x - p5 * b13_17;\n"
                    "    s6 = s5 - s4;\n"
                    "    s7 = s5 + s4;\n"
                    "    s8 = p18 + s0;\n"
                    "    s9 = p18 - s0;\n"
                    "    real_t c2 = p3 - p13 * b13_17;\n"
                    "    s10 = s6 - c2;\n"
                    "    s11 = s6 + c2;\n"
                    "\n"
                    "    real_t r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;\n"
                    "    r0 = (*u7).y + (*u2).y;\n"
                    "    r1 = (*u7).y - (*u2).y;\n"
                    "    r2 = (*u8).y + (*u5).y;\n"
                    "    r3 = (*u8).y - (*u5).y;\n"
                    "    r4 = (*u9).y - (*u3).y;\n"
                    "    r5 = (*u3).y + (*u9).y;\n"
                    "    r6 = (*u10).y + (*u4).y;\n"
                    "    r7 = (*u10).y - (*u4).y;\n"
                    "    r8 = (*u11).y - (*u6).y;\n"
                    "    r9 = (*u11).y + (*u6).y;\n"
                    "    r10 = (*u12).y + r6;\n"
                    "    r11 = (*u1).y + r5;\n"
                    "\n"
                    "    real_t m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10;\n"
                    "    real_t m11, m12, m13, m14, m15, m16, m17, m18, m19, m20;\n"
                    "    m0 = r4 + r7;\n"
                    "    m1 = r7 - r4;\n"
                    "    m2 = r8 - r1;\n"
                    "    m3 = r8 + r1;\n"
                    "    m4 = r9 + r0;\n"
                    "    m5 = r9 - r0;\n"
                    "    m6 = r11 + r10;\n"
                    "    m7 = r11 - r10;\n"
                    "    m8 = m1 - m2;\n"
                    "    m9 = m1 + m2;\n"
                    "    m10 = r3 + m3;\n"
                    "    m11 = r2 + m4;\n"
                    "    m12 = m6 - m11;\n"
                    "    m13 = m6 + m11;\n"
                    "\n"
                    "    m14 =  (*u1).y - r5 * b13_17;\n"
                    "    m15 = -(*u12).y + r6 * b13_17;\n"
                    "    m16 =  r2      - m4 * b13_17;\n"
                    "\n"
                    "    m17 = m14 + m15;\n"
                    "    m18 = m14 - m15;\n"
                    "    m19 = m18 + m16;\n"
                    "    m20 = m18 - m16;\n"
                    "\n"
                    "    real_t c0, c1, c3, c4, c5, c6, c7, c8, c9;\n"
                    "    real_t c10, c11, c12, c13, c14, c15, c16, c17, c18, c19;\n"
                    "    real_t c20, c21, c22, c23, c24;\n"
                    "    c0  =  s7 - p12 * b13_3;\n"
                    "    c1  =  s7 + p12 * b13_3;\n"
                    "    c3  =  p2 - p14 * b13_17;\n"
                    "    c4  =  s1 - p19 * b13_18;\n"
                    "    c5  = p19 + s1 * b13_18;\n"
                    "    c6  = s10 - s2 * b13_15;\n"
                    "    c7  = s11 - s3 * b13_22;\n"
                    "    c8  = (*u0).x - s8 * b13_23;\n"
                    "    c9  =  s2 + s10 * b13_7;\n"
                    "    c10 =  s3 + s11 * b13_19;\n"
                    "    c11 =  r3 - m3 * b13_17;\n"
                    "    c12 = m17 - m5 * b13_3;\n"
                    "    c13 = m17 + m5 * b13_3;\n"
                    "    c14 = m10 - m7 * b13_18;\n"
                    "    c15 = m20 - m8 * b13_15;\n"
                    "    c16 = m19 - m9 * b13_22;\n"
                    "    c17 =  m7 + m10 * b13_18;\n"
                    "    c18 = (*u0).y- m13 * b13_23;\n"
                    "    c19 =  m9 + m19 * b13_19;\n"
                    "    c20 =  m8 + m20 * b13_7;\n"
                    "    c21 =  c3 + p17 * b13_3;\n"
                    "    c22 =  c3 - p17 * b13_3;\n"
                    "    c23 = c11 + m0 * b13_3;\n"
                    "    c24 = c11 - m0 * b13_3;\n"
                    "\n"
                    "    real_t d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n"
                    "    real_t d10, d11, d12, d13, d14, d15, d16, d17, d18, d19;\n"
                    "    d0  = c22 +  c0 * b13_8;\n"
                    "    d1  =  c0 - c22 * b13_8;\n"
                    "    d2  = c21 +  c1 * b13_24;\n"
                    "    d3  =  c1 - c21 * b13_24;\n"
                    "    d4  =  s9 -  c6 * b13_4;\n"
                    "    d5  =  c6 +  s9 * b13_10;\n"
                    "    d6  =  c7 +  c9 * b13_6;\n"
                    "    d7  =  c7 -  c9 * b13_6;\n"
                    "    d8  =  c8 - c10 * b13_21;\n"
                    "    d9  =  c8 + c10 * b13_16;\n"
                    "    d10 = c24 + c12 * b13_8;\n"
                    "    d11 = c12 - c24 * b13_8;\n"
                    "    d12 = c23 + c13 * b13_24;\n"
                    "    d13 = c13 - c23 * b13_24;\n"
                    "    d14 = m12 - c15 * b13_4;\n"
                    "    d15 = c15 + m12 * b13_10;\n"
                    "    d16 = c18 + c19 * b13_16;\n"
                    "    d17 = c18 - c19 * b13_21;\n"
                    "    d18 = c16 - c20 * b13_6;\n"
                    "    d19 = c16 + c20 * b13_6;\n"
                    "\n"
                    "    real_t e0, e1, e2, e3, e4, e5, e6, e7, e8, e9;\n"
                    "    real_t e10, e11, e12, e13, e14, e15;\n"
                    "    e0  = d2  +  d0 * b13_5;\n"
                    "    e1  = d2  -  d0 * b13_5;\n"
                    "    e2  = d3  -  d1 * b13_5;\n"
                    "    e3  = d3  +  d1 * b13_5;\n"
                    "    e4  = d8  -  d4 * b13_20;\n"
                    "    e5  = d8  +  d4 * b13_20;\n"
                    "    e6  = d9  +  d5 * b13_14;\n"
                    "    e7  = d9  -  d5 * b13_14;\n"
                    "    e8  = d12 + d10 * b13_5;\n"
                    "    e9  = d12 - d10 * b13_5;\n"
                    "    e10 = d13 - d11 * b13_5;\n"
                    "    e11 = d13 + d11 * b13_5;\n"
                    "    e12 = d16 + d15 * b13_14;\n"
                    "    e13 = d16 - d15 * b13_14;\n"
                    "    e14 = d17 + d14 * b13_20;\n"
                    "    e15 = d17 - d14 * b13_20;\n"
                    "\n"
                    "    real_t f0, f1, f2, f3, f4, f5, f6, f7, f8, f9;\n"
                    "    real_t f10, f11, f12, f13, f14, f15, f16, f17, f18, f19;\n"
                    "    real_t f20, f21, f22, f23;\n"
                    "    f0  = c17 - e10 * b13_12;\n"
                    "    f1  = e10 + c17 * b13_1;\n"
                    "    f2  = e9  + c14 * b13_1;\n"
                    "    f3  = c14 -  e9 * b13_12;\n"
                    "    f4  = e11 - d7 * b13_0;\n"
                    "    f5  = e11 + d7 * b13_0;\n"
                    "    f6  = e5  - f3 * b13_11;\n"
                    "    f7  = e5  + f3 * b13_11;\n"
                    "    f8  = e4  - e8 * b13_13;\n"
                    "    f9  = e4  + e8 * b13_13;\n"
                    "    f10 = f0  + d6 * b13_2;\n"
                    "    f11 = f0  - d6 * b13_2;\n"
                    "    f12 = e1  +  c4 * b13_1;\n"
                    "    f13 = c4  -  e1 * b13_12;\n"
                    "    f14 = c5  -  e2 * b13_12;\n"
                    "    f15 = e2  +  c5 * b13_1;\n"
                    "    f16 = f14 - d19 * b13_2;\n"
                    "    f17 = f14 + d19 * b13_2;\n"
                    "    f18 = e15 +  e0 * b13_13;\n"
                    "    f19 = e15 -  e0 * b13_13;\n"
                    "    f20 = e14 + f13 * b13_11;\n"
                    "    f21 = e14 - f13 * b13_11;\n"
                    "    f22 = e3  + d18 * b13_0;\n"
                    "    f23 = e3  - d18 * b13_0;\n"
                    "\n"
                    "    (*u0).x  = (*u0).x + s8;\n"
                    "    (*u0).y  = (*u0).y + m13;\n"
                    "    (*u1).x  =  e6 -  f2 * b13_9 ;\n"
                    "    (*u1).y  = e12 + f12 * b13_9 ;\n"
                    "    (*u2).x  =  f9 + f10 * b13_11;\n"
                    "    (*u2).y  = f19 - f16 * b13_11;\n"
                    "    (*u3).x  =  f6 +  f5 * b13_13;\n"
                    "    (*u3).y  = f20 - f23 * b13_13;\n"
                    "    (*u4).x  =  f7 +  f4 * b13_13;\n"
                    "    (*u4).y  = f21 - f22 * b13_13;\n"
                    "    (*u5).x  =  e7 +  f1 * b13_9 ;\n"
                    "    (*u5).y  = e13 - f15 * b13_9 ;\n"
                    "    (*u6).x  =  f8 + f11 * b13_11;\n"
                    "    (*u6).y  = f18 - f17 * b13_11;\n"
                    "    (*u7).x  =  f9 - f10 * b13_11;\n"
                    "    (*u7).y  = f19 + f16 * b13_11;\n"
                    "    (*u8).x  =  e7 -  f1 * b13_9 ;\n"
                    "    (*u8).y  = e13 + f15 * b13_9 ;\n"
                    "    (*u9).x  =  f6 -  f5 * b13_13;\n"
                    "    (*u9).y  = f20 + f23 * b13_13;\n"
                    "    (*u10).x =  f7 -  f4 * b13_13;\n"
                    "    (*u10).y = f21 + f22 * b13_13;\n"
                    "    (*u11).x =  f8 - f11 * b13_11;\n"
                    "    (*u11).y = f18 + f17 * b13_11;\n"
                    "    (*u12).x =  e6 +  f2 * b13_9 ;\n"
                    "    (*u12).y = e12 - f12 * b13_9 ;\n"
                    "}\n";
            }
            break;
        default: throw std::logic_error("Unsupported kernel size.");
    }
    return src.str();
}


} // namespace fft
} // namespace vex

#endif
